# 
msgid ""
msgstr ""
"Project-Id-Version: OpenNebula 4.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-30 12:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/advanced_administration/public_cloud/occicg.rst:5
msgid "OCCI Server Configuration"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:7
msgid ""
"The OpenNebula OCCI (Open Cloud Computing Interface) server is a web service"
" that enables you to launch and manage virtual machines in your OpenNebula "
"installation using an implementation of the `OGF OCCI API specification "
"<http://www.occi-wg.org>`__ based on the `draft 0.8 "
"<http://forge.ogf.org/sf/docman/do/downloadDocument/projects.occi-"
"wg/docman.root.drafts/doc15731/3>`__. This implementation also includes some"
" extensions, requested by the community, to support OpenNebula specific "
"functionality. The OpenNebula OCCI service is implemented upon the "
"**OpenNebula Cloud API** (OCA) layer that exposes the full capabilities of "
"an OpenNebula private cloud; and `Sinatra <http://www.sinatrarb.com/>`__, a "
"widely used light web framework."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:9
msgid "|image0|"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:11
msgid ""
"The following sections explain how to install and configure the OCCI service"
" on top of a running OpenNebula cloud."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:13
msgid ""
"The OpenNebula OCCI service provides an OCCI interface to your cloud "
"instance, that can be used alongside the native OpenNebula CLI, Sunstone or "
"even the EC2 Query API"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:15
msgid ""
"The OpenNebula distribution includes the tools needed to use the OpenNebula "
"OCCI service"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:18
msgid "Requirements"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:20
msgid ""
"You must have an OpenNebula site properly configured and running to install "
"the OpenNebula OCCI service, be sure to check the :ref:`OpenNebula "
"Installation and Configuration Guides <design_and_installation_guide>` to "
"set up your private cloud first. This guide also assumes that you are "
"familiar with the configuration and use of OpenNebula."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:22
msgid ""
"The OpenNebula OCCI service was installed during the OpenNebula "
"installation, and the dependencies of this service are installed when using "
"the install\\_gems tool as explained in the :ref:`installation guide <ignc>`"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:24
msgid ""
"If you installed OpenNebula from source you can install the OCCI "
"dependencias as explained at the end of the :ref:`Building from Source Code "
"guide <compile>`"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:27
msgid "Considerations & Limitations"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:29
msgid ""
"The OCCI Server included in the OpenNebula distribution does not implement "
"the latest OCCI specification, it is based on the `draft 0.8 "
"<http://forge.ogf.org/sf/docman/do/downloadDocument/projects.occi-"
"wg/docman.root.drafts/doc15731/3>`__ of the OFG OCCI specification. The "
"implementation of the latest specification is being developed by TU-Dortmund"
" in a `ecosystem project "
"<http://www.opennebula.org/software:ecosystem:occi>`__. You can check the "
"documentation of this project in the following `link "
"<http://dev.opennebula.org/projects/ogf-occi/wiki>`__"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:32
msgid "Configuration"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:35
msgid "occi-server.conf"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:37
msgid ""
"The service is configured through the ``/etc/one/occi-server.conf`` file, "
"where you can set up the basic operational parameters for the OCCI service, "
"namely:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:39
msgid "The following table summarizes the available options:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:41
msgid "**Server configuration**"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:43
msgid ""
"``tmpdir``: Directory to store temp files when uploading images "
"``one_xmlrpc``: oned xmlrpc service, http://localhost:2633/RPC2 ``host``: "
"Host where OCCI server will run. ``port``: Port where OCCI server will run. "
"``ssl_server``: SSL proxy that serves the API (set if is being used)."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:49
msgid "**Log**"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:51
msgid ""
"``debug_level``: Log debug level, ``0 = ERROR``, ``1 = WARNING``, ``2 = "
"INFO``, ``3 = DEBUG``"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:53
msgid "**Auth**"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:55
msgid ""
"``auth``: Authentication driver for incoming requests ``core_auth``: "
"Authentication driver to communicate with OpenNebula core"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:58
msgid "**Resources**"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:60
msgid ""
"``instance_types``: The Computes types for your cloud ``datastore_id``: "
"Datastore in which the Images uploaded through OCCI will be allocated, by "
"default 1 ``cluster_id``: Cluster associated with the OCCI resources, by "
"default no Cluster is defined"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:64
msgid "The ``SERVER`` **must** be a FQDN, do not use IP's here"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:66
msgid "Preserve YAML syntax in the ``occi-server.conf`` file"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:68
msgid "Example:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:138
msgid "Configuring OCCI Virtual Networks"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:140
msgid ""
"You have to adapt the ``/etc/one/occi_templates/network.erb`` file to the "
"configuration that the Virtual Networks created through the OCCI interface "
"will use. For more information about the Virtual Network configuration check"
" the following :ref:`guide <vnet_template>`."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:165
msgid "Defining Compute Types"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:167
msgid "You can define as many Compute types as you want, just:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:169
msgid ""
"Create a template (new\\_type.erb) for the new type and place it in "
"``/etc/one/occi_templates``. This template will be *completed* with the data"
" for each *occi-compute create* request and the content of the "
"``/etc/one/occi_templates/common.erb`` file, and then submitted to "
"OpenNebula."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:182
msgid "Add a new type in the instance\\_types section of the occi-server.conf"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:191
msgid ""
"You can add common attributes for your cloud templates modifying the "
"``/etc/one/occi_templates/common.erb`` file."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:193
msgid ""
"The templates are processed by the OCCI service to include specific data for"
" the instance, you should not need to modify the <%= ... %> compounds inside"
" the ``common.erb`` file."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:196
msgid "Usage"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:199
msgid "Starting the Cloud Service"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:201
msgid "To start the OCCI service just issue the following command"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:207
msgid ""
"You can find the OCCI server log file in ``/var/log/one/occi-server.log``."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:209
msgid "To stop the OCCI service:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:215
msgid ""
"In order to start the OCCI server the ``/var/lib/one/.one/occi_auth`` file "
"should be readable by the user that is starting the server and the "
"serveradmin user must exist in OpenNebula"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:218
msgid "Cloud Users"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:220
msgid ""
"The cloud users have to be created in the OpenNebula system by ``oneadmin`` "
"using the ``oneuser`` utility. Once a user is registered in the system, "
"using the same procedure as to create private cloud users, they can start "
"using the system. The users will authenticate using the `HTTP basic "
"authentication <http://tools.ietf.org/html/rfc1945#section-11.1>`__ with "
"``user-ID`` their OpenNebula's username and ``password`` their OpenNebula's "
"password."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:222
msgid ""
"The cloud administrator can limit the interfaces that these users can use to"
" interact with OpenNebula by setting the driver ``public`` for them. Using "
"that driver cloud users will not be able to interact with OpenNebula through"
" Sunstone, CLI nor XML-RPC."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:229
msgid "Tuning & Extending"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:232
msgid "Authorization Methods"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:234
msgid ""
"OpenNebula OCCI Server supports two authorization methods in order to log "
"in. The method can be set in the :ref:`occi-server.conf "
"<occicg_occi_service_configuration>`, as explained above. These two methods "
"are:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:237
msgid "Basic Auth"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:239
msgid ""
"In the basic mode, username and password(sha1) are matched to those in "
"OpenNebula's database in order to authenticate the user in each request."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:242
msgid "x509 Auth"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:244
msgid ""
"This method performs the login to OpenNebula based on a x509 certificate DN "
"(Distinguished Name). The DN is extracted from the certificate and matched "
"to the password value in the user database (remember, spaces are removed "
"from DNs)."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:246
msgid ""
"The user password has to be changed running one of the following commands"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:253
msgid "or create a new user:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:260
msgid ""
"To enable this login method, set the ``:auth:`` option of ``/etc/one"
"/sunstone-server.conf`` to ``x509``:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:266
msgid ""
"Note that OpenNebula will not verify that the user is holding a valid "
"certificate at the time of login: this is expected to be done by the "
"external container of the OCCI server (normally Apache), whose job is to "
"tell the user's client that the site requires a user certificate and to "
"check that the certificate is consistently signed by the chosen Certificate "
"Authority (CA)."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:269
msgid "Configuring a SSL Proxy"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:271
msgid ""
"OpenNebula OCCI runs natively just on normal HTTP connections. If the extra "
"security provided by SSL is needed, a proxy can be set up to handle the SSL "
"connection that forwards the petition to the OCCI Service and takes back the"
" answer to the client."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:273
msgid "This set up needs:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:275
msgid "A server certificate for the SSL connections"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:276
msgid "An HTTP proxy that understands SSL"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:277
msgid "OCCI Service configuration to accept petitions from the proxy"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:279
msgid ""
"If you want to try out the SSL setup easily, you can find in the following "
"lines an example to set a self-signed certificate to be used by a lighttpd "
"configured to act as an HTTP proxy to a correctly configured OCCI Service."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:281
msgid ""
"Let's assume the server were the lighttpd proxy is going to be started is "
"called ``cloudserver.org``. Therefore, the steps are:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:284
msgid "1. Snakeoil Server Certificate"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:286
msgid ""
"We are going to generate a snakeoil certificate. If using an Ubuntu system "
"follow the next steps (otherwise your milleage may vary, but not a lot):"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:288
msgid "Install the ``ssl-cert`` package"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:294
msgid "Generate the certificate"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:300
msgid ""
"As we are using lighttpd, we need to append the private key with the "
"certificate to obtain a server certificate valid to lighttpd"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:307
msgid "2. lighttpd as a SSL HTTP Proxy"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:309
msgid ""
"You will need to edit the ``/etc/lighttpd/lighttpd.conf`` configuration file"
" and"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:311
msgid "Add the following modules (if not present already)"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:313
msgid "mod\\_access"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:314
msgid "mod\\_alias"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:315
msgid "mod\\_proxy"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:316
msgid "mod\\_accesslog"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:317
msgid "mod\\_compress"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:319
msgid ""
"Change the server port to 443 if you are going to run lighttpd as root, or "
"any number above 1024 otherwise:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:325
msgid "Add the proxy module section:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:345
msgid ""
"The host must be the server hostname of the computer running the EC2Query "
"Service, and the port the one that the EC2Query Service is running on."
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:350
msgid "3. OCCI Service Configuration"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:352
msgid "The ``occi.conf`` needs to define the following:"
msgstr ""

#: ../../source/advanced_administration/public_cloud/occicg.rst:363
msgid ""
"Once the lighttpd server is started, OCCI petitions using HTTPS uris can be "
"directed to ``https://cloudserver.org:8443``, that will then be unencrypted,"
" passed to localhost, port 4567, satisfied (hopefully), encrypted again and "
"then passed back to the client."
msgstr ""
