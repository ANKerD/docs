.. _compatibility:

====================
Compatibility Guide
====================

This guide is aimed at OpenNebula 5.2.x users and administrators who want to upgrade to the latest version. The following sections summarize the new features and usage changes that should be taken into account, or prone to cause confusion. You can check the upgrade process in the following :ref:`section <upgrade>`

Visit the :ref:`Features list <features>` and the `Release Notes <http://opennebula.org/software/release/>`_ for a comprehensive list of what's new in OpenNebula 5.4.

OpenNebula Administrators
================================================================================

OpenNebula Daemon
--------------------------------------------------------------------------------




Developers and Integrators
================================================================================

XML-RPC API
--------------------------------------------------------------------------------

This section lists all the changes in the API. Visit the :ref:`complete reference <api>` for more information.


vCenter
================================================================================

vCenter has experienced major changes from previous releases and this section tries to summarize the most important changes:

vCenter is no longer considered a PUBLIC CLOUD provider
--------------------------------------------------------------------------------

In previous releases, vCenter was considered a PUBLIC CLOUD provider as Amazon EC2 or Microsoft's Azure. This had adverse effects for vCenter e.g the CONTEXT information was not regenerated when a VM was powered off and resume.

As vcenter was considered a PUBLIC CLOUD provider, several attributes were found inside VM templates under the PUBLIC_CLOUD section, that is no longer the case.

vCenter Objects reference
--------------------------------------------------------------------------------

vCenter objects are no longer referenced from OpenNebula by its name. Previously, the names used by OpenNebula should match the name of the resource in vCenter and hence it could not be modified.

In OpenNebula 5.4, vCenter objects (clusters, datastores, port groups, templates and VMs) are referenced using vCenter's Managed Object Reference and vCenter's Intance UUID. So you will be able to change the name of these resources in vCenter and/or OpenNebula and the reference should remain the same.

You have more information about the managed object references :ref:`in the docs <vcenter_managed_object_reference>`.

This change on how vCenter objects are referenced implies that a migration must be performed in two phases as it will explained later.

Disks and networks that exist in vCenter templates or Wild VM are now visible
--------------------------------------------------------------------------------

OpenNebula 5.4 can represent disks and port groups used by templates and Wild VM when they are imported. In previous versions those disks and nics were invisible and therefore you could not manage those resources e.g you could not detach a disk or network interface card.

This change implies that a migration tool will identify existing disks and nics and will create OpenNebula images and virtual networks for templates and wild VMs that are running in OpenNebula.

Also there's an important change. If you want to import vCenter templates you MUST first import the vCenter datastores where the VMDK files associated to template's virtual hard disks are located. In previous releases you could import a template after a vCenter cluster was importe because existing disks were not visible to OpenNebula.

Names generated by OpenNebula when resources are imported
--------------------------------------------------------------------------------

When vCenter resources are imported, OpenNebula creates objects using a name that cannot be used by another object. To prevent name collisions OpenNebula has changed the way it names the resources:

* Hosts. The vcenter instance name, the datacenter name and a 12 character hash have been added to the vCenter's cluster name. Thanks to this, if you have the same cluster name in different folders or datacenters you may now import them.
* Templates. A 12 character hash has been added to the template name - cluster name.
* Datastores. The vcenter instance name and the datacenter name have been added to the datastore name. This way two datastores with the same name but placed in different datacenters can be imported.
* Networks. The vcenter instance name, the datacenter name and a 12 character hash have been added to the vCenter's port group name.

OpenNebula hosts, datastores and networks are assigned to OpenNebula clusters
--------------------------------------------------------------------------------

An OpenNebula Cluster is a group of Hosts. Clusters can also have associated Datastores and Virtual Networks, and this is how the administrator sets which Hosts have the underlying requirements for each Datastore and Virtual Network configured.

If you recall, a vCenter cluster is represented as a Host. In OpenNebula 5.4 this Host will be added to an OpenNebula cluster and also vCenter datastores and networks will be added to that OpenNebula cluster when they imported.

Thanks to OpenNebula clusters, the SCHED_REQUIREMENTS="NAME=XXXXX" attribute that was used to tell OpenNebula's scheduler which host should be used when a VM is deployed, it's no longer needed. You can of course still use the SCHED_REQUIREMENTS and SCHED_DS_REQUIREMENTS attributes in a template to force how the sheduler behaves but they won't be mandatory. Also it will easier for the scheduler to select the vCenter cluster based on the DISKs (datastores) and NICs (virtual networks) which are defined in the VM Template.

Please review the :ref:`import resources section <import_vcenter_resources>` to know more.

KEEP DISKS ON DONE has been deprecated
--------------------------------------------------------------------------------

The Keep Disks on Done option that you could use to prevent OpenNebula from erasing the VM disks upon reaching the done state (either via shutdown or cancel) has been deprecated in an attempt that KVM and vCenter storage management can converge.

If you want to create a copy of one disk you can use the :ref:`save as option <disk_save_as_action>` when the VM is in poweroff state. A new image will be created pointing to a new VMDK file.

VCENTER_DATASTORE is no longer used, Scheduler chooses the datastore
--------------------------------------------------------------------------------

In previous OpenNebula releases you could add the VCENTER_DATASTORE attribute and force what datastore was going to be used when a VM was cloned before deploying the VM.

That attribute is no longer valid. OpenNebula's scheduler will be the responsible of choosing the datastore where the VM template is going to be cloned in. The scheduler behavior is ruled by the /etc/one/sched.conf file and you can override its policy using the SCHED_REQUIREMENTS and SCHED_DS_REQUIREMENTS attributes.

Datastores now have vCenter credentials inside its templates
--------------------------------------------------------------------------------

In previous releases, datastore templates had an attribute called VCENTER_CLUSTER. That attribute helped OpenNebula to get vCenter credentials from a vcenter cluster (represented as an OpenNebula host) when datastore actions were executed.

OpenNebula 5.4 stores the VCENTER_HOST, VCENTER_USER and VCENTER_PASSWORD attributes inside datastores templates so datastores and hosts (vCenter clusters) are no longer coupled. Datastore can still be monitored even if no vCenter cluster is associated to it in OpenNebula.

Poweroff VMs are destroyed when they are deleted from OpenNebula
--------------------------------------------------------------------------------

In previous releases, the hook delete_poweroff_vms.rb was required to clean up VMs that were deleted from OpenNebula when those VMs where in the POWEROFF state. That hook is no longer needed as the VMs will be destroyed in vCenter when a VM is deleted from OpenNebula no matter the state.

VLAN_TAGGED_ID no longer reported when a distributed port group is imported
--------------------------------------------------------------------------------

In previous releases, when a distributed port group was imported some information about the VLAN ID that was assigne to the port group was reported and added to the VLAN_TAGGED_ID attribute.

That information was not accurate and trying to provide the same information for standard port groups would require a significant amount of time and CPU so VLAN ID is no longer retrieved when a distributed port group is imported.


Attributes that have changed its name
--------------------------------------------------------------------------------

In an attempt to ease the task of idenfiying vCenter related attributes many attributes have changed its name. Here is a table with the old name and the new name.

+------------------------------------+--------------------------------------+
|    Old Name                        |   New name                           |
+====================================+======================================+
| VMWARETOOLS_RUNNING_STATUS         | VCENTER_VMWARETOOLS_RUNNING_STATUS   |
+------------------------------------+--------------------------------------+
| VMWARETOOLS_VERSION                | VCENTER_VMWARETOOLS_VERSION          |
+------------------------------------+--------------------------------------+
| VMWARETOOLS_VERSION                | VCENTER_VMWARETOOLS_VERSION          |
+------------------------------------+--------------------------------------+
| CUSTOMIZATION_SPEC                 | VCENTER_CUSTOMIZATION_SPEC           |
+------------------------------------+--------------------------------------+
| GUEST_STATE                        | VCENTER_GUEST_STATE                  |
+------------------------------------+--------------------------------------+
| ADAPTER_TYPE                       | VCENTER_ADAPTER_TYPE                 |
+------------------------------------+--------------------------------------+
| ESX_HOST                           | VCENTER_ESX_HOST                     |
+------------------------------------+--------------------------------------+
| RESOURCE_POOL                      | VCENTER_RESOURCE_POOL                |
+------------------------------------+--------------------------------------+

In general, vCenter attributes will be preceed by the suffix **VCENTER_**


Pre-migration phase
--------------------------------------------------------------------------------

OpenNebula provides a script that must be run **before** it is upgraded. This script can be downloaded from TODO.

The script will perform the following tasks:

* It will inspect all OpenNebula hosts that represents vCenter clusters and it will establish a connection with every vcenter instance that if founds using the stored credentials.
* It will retrieve views containing clusters, virtual machines, templates, datastores and port groups. This operation may take some time so you'll have to be patient while some progress is shown during the execution.
* New attributes that don't interfere with existing OpenNebula templates will be added to hosts, datastores, virtual networks, VM templates an images. For example, managed object references will be added to objects so vCenter objects can be monitored after OpenNebula's upgrade operation.
* Although the script will do its best, it's probably that some manual intervention will be required. For example, if one cluster is found in several datacenter locations with the same name, the administrator must confirm what vCenter cluster is associated with the OpenNebula host.
* For each IMAGE datastore found, a SYSTEM datastore will be created.
* Templates and wild VMs that were imported will be inspected in order to discover virtual hard disks and network interface cards that are invisible. OpenNebula images and virtual networks will be created so the invisible disks and nics are visible once OpenNebula it's upgraded.
* Finally the script will create XML files in the /tmp directory. Those XML files will contain a full template where old and deprecated attributes will be removed. Those XML files will be used later in the migration phase so OpenNebula templates have only the new supported attributes.

.. important:: Before the pre-migration script can be executed you must edit the /etc/one/oned.conf configuration file and


Migration phase
--------------------------------------------------------------------------------

Once OpenNebula packages have been upgraded, the onedb tool will have a new migration tool for vCenter.

The migration tool is launched using the vcenter-one54 option:

.. image:: /images/vcenter_onedb_migrator_1.png
    :width: 35%
    :align: center

The migration tool will update some OpenNebula's database tables using the XML files that were created in the pre-migration phase. This is the list of affected tables:

* template_pool
* vm_pool
* host_pool
* datastore_pool
* network_pool
* image_pool 

.. important:: The migration tool must be run **before** a onedb upgrade command is executed. Also don't forget to run onedb fsck after a onedb upgrae, so some inconsistencies are tackled.

.. note:: The migration tool must be run from the same machine where the pre-migrator tool was executed as it requires some XML templates files stored in the /tmp directory.
